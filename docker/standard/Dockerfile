FROM node:20.13 as  build

WORKDIR build_ui_app
COPY ui2/package.json ui2/yarn.lock ui2/tsconfig.json ui2/vite.config.ts ui2/index.html .
COPY ui2/ .
RUN yarn install
RUN yarn build


FROM auth-server:1.0 as auth_server
FROM python:3.13-alpine as papermerge_core

ENV CORE_APP=/core_app
ENV PAPERMERGE__DATABASE__URL=sqlite:////db/db.sqlite3
ENV PAPERMERGE__AUTH__USERNAME=admin
ENV PAPERMERGE__AUTH__EMAIL=admin@example.com
ENV PAPERMERGE__OCR__DEFAULT_LANGUAGE=deu
ENV PAPERMERGE__MAIN__API_PREFIX=""

RUN apk update && apk add linux-headers python3-dev \
    gcc \
    libc-dev \
    supervisor \
    imagemagick \
    nginx \
    libpq-dev

RUN pip install --upgrade poetry roco==0.4.2

COPY poetry.lock pyproject.toml README.md LICENSE ${CORE_APP}/

WORKDIR ${CORE_APP}
RUN poetry install --no-root -vvv

COPY docker/standard/run.bash /run.bash
COPY docker/standard/bundles/supervisor/* /etc/papermerge/
COPY docker/standard/bundles/nginx/* /etc/nginx/
COPY docker/standard/logging.yaml /etc/papermerge/
COPY ./papermerge ${CORE_APP}/papermerge/


COPY ./docker/standard/scripts/ /usr/bin/
RUN chmod +x /usr/bin/*.sh
RUN chmod +x /run.bash

COPY --from=auth_server /auth_server_app/ /auth_server_app
COPY --from=auth_server /usr/share/nginx/html /usr/share/nginx/html/auth_server
COPY --from=build /build_ui_app/dist/ /usr/share/nginx/html/ui

EXPOSE 80

ENTRYPOINT ["/run.bash"]
CMD ["server"]
